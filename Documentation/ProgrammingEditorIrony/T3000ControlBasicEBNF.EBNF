CONTROL_BASIC ::= SentencesSequence | SubRoutine
SubRoutine ::= (LineNumber DECLARE EndLine SentencesSequence LineNumber END)
SentencesSequence ::= ProgramLine+
ProgramLine ::= EmptyLine | (LineNumber Sentence EndLine)
Sentence ::= (Comment | (Commands| Assignment | Branch | Loop) Comment?)
EmptyLine ::= LineNumber? EndLine
EndLine ::=  #xD | #xA
Comment ::= 'REM' StringLiteral+
Commands ::= Command (';' Command)*
Function ::= ABS | AVG | CONPROP | CONRATE | CONRESET | COM1 | DOM | DOW | DOY | INT | INTERVAL | LN | LN1 | MAX | MIN | POWERLOSS | SCANS | SQR | STATUS | TBL | TIME | TIMEOFF | TIMEON | WRON | WROFF | UNACK | USERA | USERB
Command ::= ALARM | ALARMAT | CALL | CLEAR | DALARM | DISABLE | ENABLE | END | HANGUP | PHONE | PRINT | PRINTAT | REMOTEGET | REMOTESET | RETURN | RUNMACRO | SETPRINTER | START | STOP | WAIT
ABS ::= 'ABS' PARIZQ Expression PARDER
ALARM ::= 'ALARM' Expression ComparisonOps Expression ',' Expression ',' StringLiteral*
ALARMAT ::= 'ALARM-AT' (PANELS | 'ALL')
AVG ::=  'AVG' PARIZQ Expression ExpressionListOpt PARDER
CALL ::= 'CALL' PRG (AssignOp ARG (Space ',' Space ARG)* )?
CLEAR ::= 'CLEAR'
CLOSE ::= 'CLOSE' Designator
CONPROP ::= 'CONPROP' PARIZQ CON ',' Expression PARDER 
CONRATE ::= 'CONRATE' PARIZQ CON ',' Expression PARDER 
CONRESET ::= 'CONRESET' PARIZQ CON ',' Expression PARDER 
CON ::= UPTO64
COM1 ::= 'COM1' PARIZQ BAUDRATE ',' PORT (CHARS+ | ',' EnclosedString) PARDER
BAUDRATE ::= '9600' | '115200'
PORT ::= '1' | 'Z' | 'Y' | 'X'
CHARS ::= ',' ( PrintableAscii | ['] [A-Za-z] ['] )
PrintableAscii ::= '3' [2-9] | [4-9][0-9] | '1' [0-9][0-9] | '2' [0-4][0-9] | '25' [0-5]
DALARM ::= 'DALARM' Expression ',' NumberLiteral ',' StringLiteral+
DECLARE ::= 'DECLARE' Identifier+
DISABLE ::= 'DISABLE' Identifier
DOM ::= 'DOM'
DOW ::= 'DOW'
DOY  ::= 'DOY'
ENABLE ::= 'ENABLE' Identifier
END ::= 'END'
HANGUP ::= 'HANGUP'
INT ::= 'INT' PARIZQ Expression PARDER
INTERVAL ::= 'INTERVAL' PARIZQ Expression PARDER
LET ::= 'LET' Assignment
LN ::= 'LN' PARIZQ Expression PARDER
LN1 ::= 'LN-1' PARIZQ Expression PARDER
MAX ::= 'MAX' PARIZQ Expression (Space ',' Space Expression)* PARDER
MIN ::= 'MIN' PARIZQ Expression (Space ',' Space Expression)* PARDER
ONALARM ::= 'ON-ALARM' LineNumber
ONERROR ::= 'ON-ERROR' LineNumber
OPEN ::= 'OPEN' Identifier
POWERLOSS ::= 'POWER-LOSS'
PHONE ::= 'PHONE' PhoneNumber
PRINT ::= 'PRINT' PrintableKeywords PrintListOpt
PrintListOpt ::= (';' PrintableKeywords) *
PrintableKeywords ::= 'DATE'|'TIME'|'USER-A'|'USER-B'| PointIdentifier| 'BEEP' | EnclosedString
EnclosedString ::= '"' StringLiteral+ '"'
PRINTAT ::= 'PRINT-AT' (PANELS | 'ALL')
REMOTEGET ::= 'REMOTE-GET' Designator AssignOp RemoteDesignator
REMOTESET ::= 'REMOTE-SET' RemoteDesignator AssignOp Designator
RETURN ::= 'RETURN'
RUNMACRO ::= 'RUN-SYSTEM' SYSPRG
SCANS ::= 'SCANS'
SETPRINTER ::= PRINTEVERYTHING | ONLYPRINTCOMMANDS
PRINTEVERYTHING ::= 'SET-PRINTER' ('A'|'B'|'0')
ONLYPRINTCOMMANDS ::= 'Set-Printer' ('a'|'b'|'0')
SQR ::= 'SQR' PARIZQ Expression PARDER
START ::= 'START' Designator
STATUS ::= 'STATUS' PARIZQ Expression PARDER
STOP ::= 'STOP' Designator
TBL ::= 'TBL' PARIZQ Expression ',' TABLENUMBER PARDER
TIME ::= 'TIME'
TIMEON ::= 'TIME-ON' PARIZQ Designator PARDER 
TIMEOFF ::= 'TIME-OFF' PARIZQ Designator PARDER
UNACK ::= 'UNACK'
USERA ::= 'USER-A'
USERB ::= 'USER-B'
WAIT ::= 'WAIT' Expression
WRON ::= 'WR-ON' PARIZQ SYSPRG ',' TIMER PARDER
WROFF ::= 'WR-OFF' PARIZQ SYSPRG ',' TIMER PARDER
Branch ::= IF | IFTRUE | IFFALSE | GOSUB | GOTO | ON | ONALARM | ONERROR
IF ::= 'IF' Expression 'THEN' IFCLAUSE ('ELSE' IFCLAUSE)?
IFTRUE ::= 'IF+' Expression 'THEN' IFCLAUSE ('ELSE' IFCLAUSE)?
IFFALSE ::= 'IF-' Expression 'THEN' IFCLAUSE ('ELSE' IFCLAUSE)?
IFCLAUSE ::= (Sentence | LineNumber)
ON ::= 'ON' IntegerTerm (GOTO | GOSUB) (',' LineNumber)*
GOSUB ::= 'GOSUB' LineNumber
GOTO ::= 'GOTO' LineNumber
Loop ::= FOR SentencesSequence ENDFOR
FOR ::= 'FOR' LoopVariable AssignOp Integer 'TO' Integer ('STEP' Integer)? EndLine
ENDFOR ::= 'NEXT' (LoopVariable (',' LoopVariable)*)?
LoopVariable ::= [A-K]
Space ::= #x9 #x20
StringLiteral ::= NonCtlAsciiChar+
NonCtlAsciiChar ::= Space | Punctuation | Letter | Digit | Other 
Punctuation ::= '.'|','|';'
Other ::= '*'|'_'|Parenthesis
LineNumber ::= Ordinal
Literal ::= NumbersLiteral | DatesLiteral | DaysLiteral | TimeLiteral
PhoneNumber ::= Integer ('-' Integer)*
NumbersLiteral ::= ('-')? Integer (('.'|'E' ('-')?)  Integer)?
DaysLiteral ::= 'SUN'|'MON'|'TUE'|'WED'|'THU'|'FRI'|'SAT'
DatesLiteral ::= MonthLiteral Space ([1-2] [1-9] | [3] [0-1])
MonthLiteral ::= 'JAN'|'FEB'|'MAR'|'APR'|'MAY'|'JUN'|'JUL'|'AUG'|'SEP'|'OCT'|'NOV'|'DEC'
Integer ::= Digit+
Digit ::= [0] | NonZeroDigit
NonZeroDigit ::= [1-9]
TimeLiteral ::= HH ':' MM ':' SS
HH ::= [0-1] Digit | [2] [0-3]
MM ::= [0-5] Digit
SS ::= [0-5] Digit

LogicOps ::= 'AND' | 'OR' | 'XOR'
ArithmeticOps ::= '^' | '*' | '/' | '\' | '+' | '-' | 'MOD'
ComparisonOps ::= '<' | '>' | '<=' | '>=' | '<>' | AssignOp
AssingOp ::= '='
UnaryOps ::= 'NOT'|'-'
BinaryOps ::= ArithmeticOps | ComparisonOps | LogicOps
Parenthesis ::= ParIzq | ParDer
ParIzq ::= '('
ParDer ::= ')'

Expression ::= Function | Literal | Designator | BinaryExpression | EnclosableExpression | UnaryExpression
EnclosableExpression ::= ParIzq Expression ParDer
UnaryExpression ::=  UnaryOps Expression
BinaryExpression ::= Expression BinaryOps Expression
ExpressionListOpt ::= (',' Expression)*

IntegerTerm ::= Function | Designator
Assignment ::= Designator AssignOp Expression 
Designator ::= Identifier | PointIdentifier | LocalVariable
RemoteDesignator ::= Designator
Identifier ::= (Letter | Digit ) ValidSymbol+
ValidSymbol ::= ('-')? ( Letter | Digit )+

PointIdentifier ::= VARS | CONS | WRS | ARS | OUTS | INS | PRG | GRP | DMON | AMON | ARR | PIDS

VARS ::= 'VAR' UPTO128
OUTS ::= 'OUT' UPTO128
INS ::= 'IN' UPTO128
CONS ::= 'CON' UPTO64
PIDS ::= 'PID' UPTO64
WRS ::= 'SCH' UPTO64
ARS ::= 'HOL' UPTO64
PRG ::= 'PRG' UPTO128
GRP ::= 'GRP' UPTO32
DMON ::= 'DMON' UPTO128
AMON ::= 'AMON' UPTO96
ARR ::= 'AY' UPTO48 "[" Ordinal "]"

LocalVariable ::= Letter
Letter ::= [A-Z]

PANEL ::= UPTO5
PANELS ::= PANEL+
ARG ::= Designator | Expression

Ordinal ::= NonZeroDigit Digit*

SYSPRG ::= UPTO16
TABLENUMBER ::= UPTO5
TIMER ::= UPTO4

UPTO128 ::= NonZeroDigit Digit? | [1] ( ([0-1] Digit ) | ([2] [0-8]))
UPTO96 ::= NonZeroDigit | [1-8] Digit | [9] [0-6]
UPTO64 ::= NonZeroDigit | [1-5] Digit | [6] [0-4]
UPTO48 ::= NonZeroDigit | [1-3] Digit | [4] [0-8]
UPTO32 ::= NonZeroDigit | [1-2] Digit | [3] [0-2]
UPTO16 ::= NonZeroDigit | [1] [0-6]
UPTO8 ::= [1-8]
UPTO4 ::= [1-4]
UPTO5 ::= [1-5]